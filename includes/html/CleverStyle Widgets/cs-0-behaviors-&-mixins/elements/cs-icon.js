// Generated by LiveScript 1.4.0
/**
 * @package   CleverStyle Widgets
 * @author    Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright Copyright (c) 2015-2016, Nazar Mokrynskyi
 * @license   MIT License, see license.txt
 */
(function(){
  Polymer.cs.behaviors.csIcon = [
    Polymer.cs.behaviors['this'], Polymer.cs.behaviors.tooltip, {
      observers: ['_icon_changed(icon, flipX, flipY, mono, rotate, spin, spinStep)'],
      properties: {
        icon: {
          reflectToAttribute: true,
          type: String
        },
        flipX: {
          reflectToAttribute: true,
          type: Boolean,
          value: false
        },
        flipY: {
          reflectToAttribute: true,
          type: Boolean,
          value: false
        },
        mono: {
          reflectToAttribute: true,
          type: Boolean,
          value: false
        },
        rotate: {
          reflectToAttribute: true,
          type: Number,
          value: false
        },
        spin: {
          reflectToAttribute: true,
          type: Boolean,
          value: false
        },
        spinStep: {
          reflectToAttribute: true,
          type: Boolean,
          value: false
        }
      },
      ready: function(){
        this.scopeSubtree(this.$.content, true);
        this.hidden = this.icon === undefined;
      },
      _icon_changed: function(icon, flipX, flipY, mono, rotate, spin, spinStep){
        var content, icons, multiple_icons, i$, len$, index, icon_class;
        if (!icon) {
          this.hidden = true;
          return;
        } else if (this.hidden) {
          this.hidden = false;
        }
        content = '';
        icons = icon.split(' ');
        multiple_icons = icons.length > 1;
        for (i$ = 0, len$ = icons.length; i$ < len$; ++i$) {
          index = i$;
          icon = icons[i$];
          icon_class = "fa fa-" + icon;
          if (flipX) {
            icon_class += ' fa-flip-horizontal';
          }
          if (flipY) {
            icon_class += ' fa-flip-vertical';
          }
          if (mono) {
            icon_class += ' fa-fw';
          }
          if (rotate) {
            icon_class += " fa-rotate-" + rotate;
          }
          if (spin) {
            icon_class += ' fa-spin';
          }
          if (spinStep) {
            icon_class += ' fa-pulse';
          }
          if (multiple_icons) {
            icon_class += index ? ' fa-stack-1x fa-inverse' : ' fa-stack-2x';
          }
          content += "<i class=\"" + icon_class + "\"></i>";
        }
        if (multiple_icons) {
          content = "<span class=\"fa-stack\">" + content + "</span>";
        }
        this.$.content.innerHTML = content;
      }
    }
  ];
}).call(this);
