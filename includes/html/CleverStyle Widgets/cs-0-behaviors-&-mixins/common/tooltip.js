// Generated by LiveScript 1.4.0
/**
 * @package   CleverStyle Widgets
 * @author    Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright Copyright (c) 2015-2016, Nazar Mokrynskyi
 * @license   MIT License, see license.txt
 */
(function(){
  var tooltip_element, ref$;
  tooltip_element = null;
  ((ref$ = Polymer.cs || (Polymer.cs = {})).behaviors || (ref$.behaviors = {})).tooltip = {
    properties: {
      tooltip: String
    },
    attached: function(){
      var this$ = this;
      this.addEventListener('mouseover', (function(){
        function add_tooltip(){
          this$.removeEventListener('mouseover', add_tooltip);
          if (this$.tooltip) {
            this$._tooltip_for_element(this$);
          }
        }
        return add_tooltip;
      }()));
    },
    _tooltip_for_element: function(element){
      var show, hide, this$ = this;
      if (this._tooltip_binding_added) {
        return;
      }
      this._tooltip_binding_added = true;
      this._initialize_tooltip();
      element.tooltip = element.tooltip || element.getAttribute('tooltip');
      show = this._schedule_show.bind(this, element);
      hide = function(){
        this$._cancel_schedule_show();
        tooltip_element._hide(element);
      };
      element.addEventListener('mousemove', show);
      element.addEventListener('pointermove', show);
      element.addEventListener('mouseleave', hide);
      element.addEventListener('pointerleave', hide);
    },
    _initialize_tooltip: function(){
      if (!tooltip_element) {
        tooltip_element = document.createElement('cs-tooltip');
        document.documentElement.appendChild(tooltip_element);
      }
    },
    _schedule_show: function(element){
      this._cancel_schedule_show();
      this.show_timeout = setTimeout(tooltip_element._show.bind(tooltip_element, element), 100);
    },
    _cancel_schedule_show: function(){
      if (this.show_timeout) {
        clearTimeout(this.show_timeout);
      }
    }
  };
}).call(this);
