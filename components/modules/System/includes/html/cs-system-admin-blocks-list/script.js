// Generated by LiveScript 1.4.0
/**
 * @package    CleverStyle CMS
 * @subpackage System module
 * @category   modules
 * @author     Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright  Copyright (c) 2015-2016, Nazar Mokrynskyi
 * @license    MIT License, see license.txt
 */
(function(){
  var L;
  L = cs.Language('system_admin_blocks_');
  Polymer({
    'is': 'cs-system-admin-blocks-list',
    behaviors: [cs.Polymer.behaviors.Language('system_admin_blocks_')],
    properties: {
      blocks: Object,
      blocks_count: Number
    },
    ready: function(){
      this._reload();
    },
    _init_sortable: function(){
      var $shadowRoot, $group;
      $shadowRoot = $(this.shadowRoot);
      if ($shadowRoot.find('[group] > div:not(:first)').length < this.blocks_count) {
        setTimeout(this._init_sortable.bind(this), 100);
        return;
      }
      $group = $shadowRoot.find('[group]');
      $group.sortable({
        connectWith: 'blocks-list',
        items: 'div:not(:first)',
        placeholder: '<div class="cs-block-primary">'
      }).on('sortupdate', function(){
        var get_indexes, order;
        get_indexes = function(it){
          return $group.filter("[group=" + it + "]").children('div:not(:first)').map(function(){
            return this.index;
          }).get();
        };
        order = {
          top: get_indexes('top'),
          left: get_indexes('left'),
          floating: get_indexes('floating'),
          right: get_indexes('right'),
          bottom: get_indexes('bottom')
        };
        $.ajax({
          url: 'api/System/admin/blocks',
          type: 'update_order',
          data: {
            order: order
          },
          success: function(){
            cs.ui.notify(L.changes_saved, 'success', 5);
          }
        });
      });
    },
    _status_class: function(active){
      if (active == 1) {
        return 'cs-block-success cs-text-success';
      } else {
        return 'cs-block-warning cs-text-warning';
      }
    },
    _reload: function(){
      var this$ = this;
      $.getJSON('api/System/admin/blocks', function(blocks){
        var blocks_grouped, i$, len$, index, block;
        this$.blocks_count = blocks.length;
        blocks_grouped = {
          top: [],
          left: [],
          floating: [],
          right: [],
          bottom: []
        };
        for (i$ = 0, len$ = blocks.length; i$ < len$; ++i$) {
          index = i$;
          block = blocks[i$];
          blocks_grouped[block.position].push(block);
        }
        this$.set('blocks', blocks_grouped);
        this$._init_sortable();
      });
    },
    _block_permissions: function(e){
      var title;
      title = L.permissions_for_block(e.model.item.title);
      cs.ui.simple_modal("<h3>" + title + "</h3>\n<cs-system-admin-permissions-for-item label=\"" + e.model.item.index + "\" group=\"Block\"/>");
    },
    _add_block: function(){
      var this$ = this;
      $(cs.ui.simple_modal("<h3>" + L.block_addition + "</h3>\n<cs-system-admin-blocks-form/>")).on('close', function(){
        this$._reload();
      });
    },
    _edit_block: function(e){
      var title, this$ = this;
      title = L.editing_block(e.model.item.title);
      $(cs.ui.simple_modal("<h3>" + title + "</h3>\n<cs-system-admin-blocks-form index=\"" + e.model.item.index + "\"/>")).on('close', function(){
        this$._reload();
      });
    },
    _delete_block: function(e){
      var title, this$ = this;
      title = L.sure_to_delete_block(e.model.item.title);
      cs.ui.confirm("<h3>" + title + "</h3>", function(){
        $.ajax({
          url: 'api/System/admin/blocks/' + e.model.item.index,
          type: 'delete',
          success: function(){
            cs.ui.notify(L.changes_saved, 'success', 5);
            this$._reload();
          }
        });
      });
    }
  });
}).call(this);
