// Generated by LiveScript 1.4.0
/**
 * @package    CleverStyle Framework
 * @subpackage System module
 * @category   modules
 * @author     Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright  Copyright (c) 2015-2016, Nazar Mokrynskyi
 * @license    MIT License, see license.txt
 */
(function(){
  Polymer({
    'is': 'cs-system-admin-users-groups-form',
    behaviors: [cs.Polymer.behaviors.Language('system_admin_users_')],
    properties: {
      user: '',
      user_groups: Array,
      other_groups: Array
    },
    ready: function(){
      this._reload();
    },
    _reload: function(){
      var this$ = this;
      cs.api(['get api/System/admin/groups', "get api/System/admin/users/" + this.user + "/groups"]).then(function(arg$){
        var groups, user_groups_ids, user_groups, other_groups, normalized_groups, group, i$, len$;
        groups = arg$[0], user_groups_ids = arg$[1];
        user_groups = [];
        other_groups = [];
        normalized_groups = {};
        for (group in groups) {
          group = groups[group];
          if (user_groups_ids.indexOf(group.id) !== -1) {
            normalized_groups[group.id] = group;
          } else {
            other_groups.push(group);
          }
        }
        for (i$ = 0, len$ = user_groups_ids.length; i$ < len$; ++i$) {
          group = user_groups_ids[i$];
          user_groups.push(normalized_groups[group]);
        }
        this$.user_groups = user_groups;
        this$.other_groups = other_groups;
        this$._init_sortable();
      });
    },
    _init_sortable: function(){
      var this$ = this;
      require(['html5sortable-no-jquery'], function(html5sortable){
        if (this$.shadowRoot.querySelectorAll('#user-groups > div:not(:first-child)').length < this$.user_groups.length || this$.shadowRoot.querySelectorAll('#other-groups > div:not(:first-child)').length < this$.other_groups.length) {
          setTimeout(this$._init_sortable.bind(this$), 100);
          return;
        }
        html5sortable(this$.shadowRoot.querySelectorAll('#user-groups, #other-groups'), {
          connectWith: 'user-groups-list',
          items: 'div:not(:first-child)',
          placeholder: '<div class="cs-block-primary">'
        })[0].addEventListener('sortupdate', function(){
          var i$, ref$, len$, element, x$, y$;
          for (i$ = 0, len$ = (ref$ = this$.shadowRoot.querySelectorAll('#user-groups > div:not(:first-child)')).length; i$ < len$; ++i$) {
            element = ref$[i$];
            x$ = element.classList;
            x$.remove('cs-block-warning', 'cs-text-warning');
            x$.add('cs-block-success', 'cs-text-success');
          }
          for (i$ = 0, len$ = (ref$ = this$.shadowRoot.querySelectorAll('#other-groups > div:not(:first-child)')).length; i$ < len$; ++i$) {
            element = ref$[i$];
            y$ = element.classList;
            y$.remove('cs-block-success', 'cs-text-success');
            y$.add('cs-block-warning', 'cs-text-warning');
          }
        });
      });
    },
    save: function(){
      var groups, this$ = this;
      groups = [].map.call(this.shadowRoot.querySelectorAll('#user-groups > div:not(:first-child)'), function(it){
        return it.group;
      });
      cs.api("put api/System/admin/users/" + this.user + "/groups", {
        groups: groups
      }).then(function(){
        cs.ui.notify(this$.L.changes_saved, 'success', 5);
      });
    }
  });
}).call(this);
