// Generated by CoffeeScript 1.4.0

/**
 * @package		Plupload
 * @category	modules
 * @author		Moxiecode Systems AB
 * @author		Nazar Mokrynskyi <nazar@mokrynskyi.com> (integration into CleverStyle CMS)
 * @copyright	Moxiecode Systems AB
 * @license		GNU GPL v2, see license.txt
*/


/**
 * Files uploading interface
 *
 * @param {object}		button
 * @param {function}	success
 * @param {function}	error
 * @param {function}	progress
 * @param {bool}		multi
 *
 * @return {function}
*/


(function() {

  window.file_upload = function(button, success, error, progress, multi) {
    var file_element, files, uploader;
    files = [];
    if (!button.attr('id')) {
      button.attr('id', 'plupload_' + String((new Date).getTime()).replace('.', ''));
    }
    uploader = new plupload.Uploader({
      runtimes: 'html5',
      browse_button: button.attr('id'),
      max_file_size: window.plupload_max_file_size ? plupload_max_file_size : null,
      url: '/Plupload',
      multi_selection: multi,
      multipart: true
    });
    uploader.init();
    file_element = $('#' + uploader.id + '_html5');
    if (!file_element.attr('accept')) {
      file_element.removeAttr('accept');
    }
    uploader.bind('FilesAdded', function() {
      uploader.refresh();
      return uploader.start();
    });
    if (progress) {
      uploader.bind('UploadProgress', function(uploader, file) {
        return progress(file.percent, file.size, file.loaded, file.name);
      });
    }
    if (success) {
      uploader.bind('FileUploaded', function(uploader, files_, res) {
        var response;
        response = $.parseJSON(res.response);
        if (!response.error) {
          return files.push(response.result);
        } else {
          return alert(response.error.message);
        }
      });
      uploader.bind('UploadComplete', function() {
        success(files);
        return files = [];
      });
    }
    if (error) {
      uploader.bind('Error', function(uploader, error) {
        return error(error);
      });
    }
    this.stop = function() {
      return uploader.stop();
    };
    this.destroy = function() {
      return uploader.destroy();
    };
    this.browse = function() {
      return file_element.click();
    };
    return this;
  };

  return;

}).call(this);
